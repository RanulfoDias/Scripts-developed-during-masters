import pandas as pd #análise de dados
import re #padrões de texto (REGEX)
import io #operações de entrada e saída

# Abre o arquivo original para leitura
with open('/content/simnibs_simulation_20231123-185405.log', "r", encoding="latin-1") as arquivo:
    simnibs = arquivo.read()

#no modo de leitura ("r"). Isso garante que o arquivo seja fechado automaticamente após o uso.

# Expressão regular para extrair as informações do "SUMMARY" e da tabela "Field Percentiles"
pattern_summary = r"SUMMARY:[\s\n]+([\w\W]+?)(?=\n\[\s\w+)"

pattern_centre = r"centre:\s+(\w+)"

# Encontra todas as correspondências na string
matches_summary = re.findall(pattern_summary, simnibs, re.DOTALL)
matches_centre = re.findall(pattern_centre, simnibs)

# Lista para armazenar as linhas de cada simulação
lines = []

# Loop através das correspondências do SUMMARY para cada simulação
for i, summary in enumerate(matches_summary):
    # Divide o SUMMARY em linhas, removendo espaços em branco no início e no final.
    summary_lines = summary.strip().split('\n')

    #  Extrai os valores "centre" correspondentes da simulação. Os valores são agrupados em grupos de 4, assumindo que cada simulação tenha 4 valores
    eletrodos = matches_centre[i * 4 : (i + 1) * 4]

    # Adiciona uma linha com a identificação da simulação e os eletrodos "centre" usados
    lines.append(f"Simulacao_{i + 1} - Centres: {', '.join(eletrodos)}")

    # Adiciona as linhas do SUMMARY
    lines.extend(summary_lines)

    # Adiciona uma linha em branco para separar as simulações
    lines.append("")

# Salva as linhas em um arquivo TXT
with open('simnibs_data4.txt', "w", encoding="latin-1") as arquivo_novo:
    arquivo_novo.write('\n'.join(lines)) #Escreve as linhas processadas no arquivo, juntando-as usando a quebra de linha
